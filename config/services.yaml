parameters:
    locale:                               fr
    locales:                              [fr, en]
    pattern_uuid:                         '[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}'
    pattern_sha1:                         '[0-9A-Fa-f]{40}'
    pattern_coordinate:                   '-?\d+(\.\d{1,7})?'
    timeline_max_messages:                30
    search_max_results:                   30
    enable_canary:                        "%env(ENABLE_CANARY)%"
    procurations_reply_to_email:          'contact@en-marche.fr'
    transactional_sender_email:           'contact@en-marche.fr'
    transactional_sender_name:            'La République En Marche !'
    campaign_sender_email:                'jemarche@en-marche.fr'
    campaign_sender_name:                 'La République En Marche !'
    feed_ttl:                             60 # in minutes
    legislatives_financial_hotline_email: 'comptes.legislatives@en-marche.fr'
    legislatives_standard_hotline_email:  'campagne.legislatives@en-marche.fr'
    app_host:                             "%env(APP_HOST)%"
    amp_host:                             "%env(AMP_HOST)%"
    legislatives_host:                    "%env(LEGISLATIVES_HOST)%"
    nous_reussirons_host:                 "%env(NOUS_REUSSIRONS_HOST)%"
    mooc_base_url:                        "%env(MOOC_BASE_URL)%"
    api_path_prefix:                      "%env(API_PATH_PREFIX)%"
    router.request_context.scheme:        "%env(APP_SCHEME)%"
    router.request_context.host:          "%app_host%"
    image_max_length:                     450px
    webhook.email_subscriptions_secret:   "%env(APP_EMAIL_SUBSCRIPTIONS_WEBHOOK_SECRET)%"
    sonata.exporter.writer.csv.with_bom:  true
    adherent_message_referent_limit: 1000
    adherent_message_committee_limit: 1000
    adherent_message_deputy_limit: 1000
    adherent_message_senator_limit: 1000
    coterr_meeting_max_start_date: 2020-10-31 23:59:59

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false
        bind:
            $environment: '%kernel.environment%'
            $mailchimpClient: '@csa_guzzle.client.mailchimp_api'
            $mailchimpListId: '%env(MAILCHIMP_MEMBER_LIST_ID)%'
            $mailchimpElectedRepresentativeListId: '%env(MAILCHIMP_ELECTED_REPRESENTATIVE_LIST_ID)%'
            $transactionalMailer: '@app.mailer.transactional'
            $campaignMailer: '@app.mailer.campaign'
            $votingProcessWorkflow: '@state_machine.voting_process'
            $votingPlatformCache: !service
                class: Symfony\Component\Cache\Simple\Psr6Cache
                arguments: ['@app.cache.voting_platform']
            $geoGouvApiClient: '@app.http_client.geo_gouv'
            $tonMacronInvitationStateMachine: '@state_machine.ton_macron_invitation'
            $patternUuid: '%pattern_uuid%'

    _instanceof:
        App\Adherent\Unregistration\Handlers\UnregistrationAdherentHandlerInterface:
            tags: ['app.adherent.unregistration.handler']
        App\Adherent\Certification\Handlers\CertificationRequestHandlerInterface:
            tags: ['app.adherent.certification_request.handler']
        App\AdherentMessage\MailchimpCampaign\Handler\MailchimpCampaignHandlerInterface:
            tags: [ 'app.adherent_message.mailchimp.campaign.handler' ]
        App\AdherentMessage\TransactionalMessage\MessageModifier\MessageModifierInterface:
            tags: [ 'app.adherent_message.transaction.message_modifier' ]
        App\AdherentMessage\Sender\SenderInterface:
            tags: [ 'app.adherent_message.sender' ]
        App\TerritorialCouncil\Handlers\TerritorialCouncilMembershipHandlerInterface:
            tags: ['app.adherent.territorial_council_membership.handler']
        Symfony\Component\Messenger\Handler\MessageHandlerInterface:
            tags: ['messenger.message_handler']
        App\Redirection\Dynamic\RedirectToInterface:
            tags: ['app.redirection.handler']

    # Imports
    App\:
        resource: '../src/*'
        exclude: '../src/{Admin,Algolia,OAuth,Twig,Mailchimp,DependencyInjection,Controller,Entity,Security,Kernel.php}'
    App\Algolia\:
        resource: '../src/Algolia/'
        exclude: '../src/Algolia/Sonata/{Pager,ProxyQuery}'

    # Services

    App\Map\StaticMapProviderInterface: '@app.map.google_maps_static_provider'

    App\Adherent\Handler\RemoveAdherentAndRelatedDataCommandHandler:
        arguments:
            $handlers: !tagged 'app.adherent.unregistration.handler'

    App\Adherent\Certification\CertificationRequestProcessCommandHandler:
        arguments:
            $handlers: !tagged 'app.adherent.certification_request.handler'

    App\Adherent\Handler\AdherentUpdateTerritorialCouncilMembershipsCommandHandler:
        arguments:
            $handlers: !tagged 'app.adherent.territorial_council_membership.handler'

    App\Redirection\Dynamic\RedirectionsSubscriber:
        arguments:
            $handlers: !tagged 'app.redirection.handler'

    App\AdherentMessage\Listener\InitialiseMailchimpCampaignEntitySubscriber:
        arguments: [ !tagged 'app.adherent_message.mailchimp.campaign.handler' ]

    App\AdherentMessage\Listener\UpdateTransactionalAdherentMessageDataListener:
        arguments: [ !tagged 'app.adherent_message.transaction.message_modifier' ]

    App\AdherentMessage\AdherentMessageManager:
        arguments:
            $senders: !tagged 'app.adherent_message.sender'

    App\AdherentMessage\MessageLimiter:
        arguments:
            -
                referent: '%adherent_message_referent_limit%'
                committee: '%adherent_message_committee_limit%'
                deputy: '%adherent_message_deputy_limit%'
                senator: '%adherent_message_senator_limit%'

    App\AdherentMessage\Listener\AdherentMessageChangeSubscriber:
        tags: ['doctrine.event_subscriber']

    App\Normalizer\IdeaAnswerNormalizer:
        arguments:
            - '@api_platform.serializer.normalizer.item'
            - '@api_platform.metadata.resource.metadata_factory'

    App\Normalizer\IdeaThreadNormalizer:
        arguments:
            - '@api_platform.serializer.normalizer.item'
            - '@api_platform.metadata.resource.metadata_factory'

    App\Normalizer\IdeaAuthorNicknameNormalizer:
        arguments: ['@api_platform.serializer.normalizer.item']

    App\Normalizer\IdeaThemeNormalizer:
        arguments: ['@api_platform.serializer.normalizer.item']

    App\Normalizer\ItemNormalizerDecorator:
        decorates: 'api_platform.serializer.normalizer.item'
        arguments: ['@App\Normalizer\ItemNormalizerDecorator.inner']

    App\Normalizer\Indexer\ThrowExceptionNormalizer:
        tags: [{name: 'serializer.normalizer', priority: -801}] # to be just after CustomNormalizer

    App\Committee\EventListener\CommitteeSubscriber:
        arguments:
            $producer: '@old_sound_rabbit_mq.sync_api_producer'

    # Form
    App\Form\PurifiedTextareaType:
        arguments:
            -
                default: '@app.html_purifier.default'
                enrich_content: '@app.html_purifier.enrich_content'
                basic_content: '@app.html_purifier.basic_content'

    App\Form\MemberInterestsChoiceType:
        arguments:
            - '%adherent_interests%'

    App\Form\TerritorialCouncil\EditDesignationType:
        arguments:
            - '%coterr_meeting_max_start_date%'

    # Validators
    App\Validator\TerritorialCouncil\TerritorialCouncilDesignationValidator:
        arguments:
            - '%coterr_meeting_max_start_date%'

    App\Algolia\SearchService:
        decorates: 'search.service'
        arguments:
            - '@App\Algolia\SearchService.inner'
            - '%kernel.debug%'

    App\Vision\ImageAnnotatorClient:
        arguments:
            $keyFilePath: '%kernel.project_dir%/gcloud-service-key.json'

    Geocoder\Geocoder: '@bazinga_geocoder.geocoder'

    League\Flysystem\Filesystem:
        arguments:
            - !service
                class: 'League\Flysystem\AdapterInterface'
                factory: 'App\Storage\FilesystemAdapterFactory::createAdapter'
                arguments:
                    - '%kernel.environment%'
                    - '%kernel.project_dir%/app/data'
                    - '%env(GCLOUD_PROJECT_ID)%'
                    - '%kernel.project_dir%/gcloud-service-key.json'
                    - '%env(GCLOUD_BUCKET)%'

    League\Flysystem\FilesystemInterface: '@League\Flysystem\Filesystem'

    App\Recaptcha\RecaptchaApiClient:
        arguments:
            $privateKey: '%env(RECAPTCHA_PRIVATE_KEY)%'
            $config:
                timeout: 5.0
                environment: '%kernel.environment%'

    App\Procuration\ProcurationProxyMessageFactory:
        arguments:
            $replyToEmailAddress: '%procurations_reply_to_email%'

    Lexik\Bundle\PayboxBundle\Paybox\System\Cancellation\Request: '@lexik_paybox.request_cancellation_handler'
    Sonata\Exporter\Exporter: '@sonata.exporter.exporter'

    Symfony\Bridge\PsrHttpMessage\Factory\DiactorosFactory: '@sensio_framework_extra.psr7.http_message_factory'
    Symfony\Bridge\PsrHttpMessage\HttpFoundationFactoryInterface: '@sensio_framework_extra.psr7.http_foundation_factory'

    League\OAuth2\Server\Repositories\AccessTokenRepositoryInterface: '@App\OAuth\Store\AccessTokenStore'
    League\OAuth2\Server\Repositories\UserRepositoryInterface: '@App\OAuth\Repository\OAuthUserRepository'
    League\OAuth2\Server\Repositories\AuthCodeRepositoryInterface: '@App\OAuth\Store\AuthorizationCodeStore'
    League\OAuth2\Server\Repositories\ClientRepositoryInterface: '@App\OAuth\Store\ClientStore'
    League\OAuth2\Server\Repositories\RefreshTokenRepositoryInterface: '@App\OAuth\Store\RefreshTokenStore'
    League\OAuth2\Server\Repositories\ScopeRepositoryInterface: '@App\OAuth\Store\ScopeStore'

    Symfony\Component\Security\Http\Logout\LogoutUrlGenerator: '@security.logout_url_generator'

    Sonata\AdminBundle\Builder\ShowBuilderInterface: '@sonata.admin.builder.orm_show'
#    Sonata\AdminBundle\Model\ModelManagerInterface: '@sonata.admin.manager.orm'
#    League\OAuth2\Server\Repositories\AccessTokenRepositoryInterface: '@App\OAuth\Store\AccessTokenStore'
#
#    League\OAuth2\Server\ResourceServer:
#        arguments:
#            $publicKey: '%env(SSL_PUBLIC_KEY)%'
#
    App\Security\EventListener\LastVisitedPageOnGetListener:
        arguments:
            $apiPathPrefix: '%env(API_PATH_PREFIX)%'
            $firewallMap: '@security.firewall.map'
